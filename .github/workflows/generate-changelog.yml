name: Update Changelog

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get version from tag or input
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "release" ]; then
          echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Get previous tag
      id: prev_tag
      run: |
        PREV_TAG=$(git tag --sort=-version:refname | grep -v "${{ steps.version.outputs.version }}" | head -n 1)
        echo "prev_tag=${PREV_TAG}" >> $GITHUB_OUTPUT

    - name: Generate changelog content
      id: changelog
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        PREV_TAG="${{ steps.prev_tag.outputs.prev_tag }}"
        DATE=$(date '+%Y-%m-%d')
        
        echo "## [$VERSION] - $DATE" > temp_changelog.md
        echo "" >> temp_changelog.md
        
        # Commit'leri kategorilere ayƒ±r
        if [ -n "$PREV_TAG" ]; then
          COMMITS=$(git log --pretty=format:"%s" ${PREV_TAG}..HEAD)
        else
          COMMITS=$(git log --pretty=format:"%s")
        fi
        
        # √ñzellik eklemeleri
        FEATURES=$(echo "$COMMITS" | grep -i "^feat\|^add\|^new" | sed 's/^/- /' || true)
        if [ -n "$FEATURES" ]; then
          echo "### ‚ú® Yeni √ñzellikler" >> temp_changelog.md
          echo "$FEATURES" >> temp_changelog.md
          echo "" >> temp_changelog.md
        fi
        
        # D√ºzeltmeler
        FIXES=$(echo "$COMMITS" | grep -i "^fix\|^bug\|^patch" | sed 's/^/- /' || true)
        if [ -n "$FIXES" ]; then
          echo "### üêõ D√ºzeltmeler" >> temp_changelog.md
          echo "$FIXES" >> temp_changelog.md
          echo "" >> temp_changelog.md
        fi
        
        # G√ºncellemeler
        UPDATES=$(echo "$COMMITS" | grep -i "^update\|^improve\|^enhance" | sed 's/^/- /' || true)
        if [ -n "$UPDATES" ]; then
          echo "### üîÑ G√ºncellemeler" >> temp_changelog.md
          echo "$UPDATES" >> temp_changelog.md
          echo "" >> temp_changelog.md
        fi
        
        # Diƒüer deƒüi≈üiklikler
        OTHERS=$(echo "$COMMITS" | grep -v -i "^feat\|^add\|^new\|^fix\|^bug\|^patch\|^update\|^improve\|^enhance" | sed 's/^/- /' || true)
        if [ -n "$OTHERS" ]; then
          echo "### üìù Diƒüer Deƒüi≈üiklikler" >> temp_changelog.md
          echo "$OTHERS" >> temp_changelog.md
          echo "" >> temp_changelog.md
        fi

    - name: Update CHANGELOG.md
      run: |
        if [ ! -f CHANGELOG.md ]; then
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "Bu dosya projedeki t√ºm √∂nemli deƒüi≈üiklikleri kayƒ±t altƒ±na alƒ±r." >> CHANGELOG.md
          echo "" >> CHANGELOG.md
        fi
        
        # Yeni i√ßeriƒüi mevcut changelog'un ba≈üƒ±na ekle
        cp CHANGELOG.md old_changelog.md
        head -n 4 old_changelog.md > CHANGELOG.md
        cat temp_changelog.md >> CHANGELOG.md
        tail -n +5 old_changelog.md >> CHANGELOG.md
        
        rm temp_changelog.md old_changelog.md

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --quiet CHANGELOG.md; then
          echo "Changelog'da deƒüi≈üiklik yok"
        else
          git add CHANGELOG.md
          git commit -m "üìù Changelog g√ºncellendi: ${{ steps.version.outputs.version }}"
          git push
        fi

    - name: Create Pull Request (optional)
      if: github.event_name == 'workflow_dispatch'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "üìù Changelog g√ºncellendi: ${{ steps.version.outputs.version }}"
        title: "Changelog G√ºncellemesi - ${{ steps.version.outputs.version }}"
        body: |
          Bu PR, ${{ steps.version.outputs.version }} s√ºr√ºm√º i√ßin changelog'u otomatik olarak g√ºnceller.
          
          ### Deƒüi≈üiklikler:
          - CHANGELOG.md dosyasƒ± g√ºncellendi
          - Yeni s√ºr√ºm bilgileri eklendi
          - Commit ge√ßmi≈üinden otomatik i√ßerik olu≈üturuldu
        branch: changelog-update-${{ steps.version.outputs.version }}
        delete-branch: true
