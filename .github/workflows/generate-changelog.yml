name: Generate Changelog Entry
on:
  workflow_call:  # Başka bir workflow'dan çağrılabilir
jobs:
  generate-changelog:
    name: Generate CHANGELOG.md Entry
    runs-on: self-hosted
    steps:
      - name: Complete workspace cleanup
        run: |
          # Workspace'i tamamen temizle
          if [ -d "${{ github.workspace }}" ]; then
            rm -rf ${{ github.workspace }}/*
            rm -rf ${{ github.workspace }}/.git*
          fi
          
      - name: Checkout repository with token
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          clean: true
          
      - name: Fix Git repository if needed
        run: |
          # Eğer hala git repo problemi varsa, manuel düzelt
          if ! git status >/dev/null 2>&1; then
            echo "Git repository not properly initialized, fixing..."
            rm -rf .git
            git init
            git remote add origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            git fetch origin
            
            # Mevcut branch'leri kontrol et
            echo "Available branches:"
            git branch -r
            
            # Head ref varsa kullan, yoksa main kullan
            if [ -n "${{ github.head_ref }}" ]; then
              TARGET_BRANCH="${{ github.head_ref }}"
            else
              TARGET_BRANCH="main"
            fi
            
            echo "Attempting to checkout: $TARGET_BRANCH"
            
            # Branch'in var olup olmadığını kontrol et
            if git show-ref --verify --quiet refs/remotes/origin/$TARGET_BRANCH; then
              git checkout -b $TARGET_BRANCH origin/$TARGET_BRANCH
            else
              echo "Branch $TARGET_BRANCH not found, using main"
              git checkout -b main origin/main
            fi
          fi
          
          echo "Git status after fix:"
          git status
          echo "Current branch:"
          git branch -a
          
      - name: Set metadata from PR
        run: |
          echo "TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
          echo "BODY=${{ github.event.pull_request.body }}" >> $GITHUB_ENV
          echo "NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "VERSION=1.0.${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          
      - name: Create changelog entry file
        run: |
          echo "## [${VERSION}] - ${DATE}" > NEW_CHANGELOG_ENTRY.md
          echo "" >> NEW_CHANGELOG_ENTRY.md
          echo "### feature:" >> NEW_CHANGELOG_ENTRY.md
          echo "- $TITLE (by @$AUTHOR) [PR #$NUMBER]" >> NEW_CHANGELOG_ENTRY.md
          echo "" >> NEW_CHANGELOG_ENTRY.md
          echo "### fix:" >> NEW_CHANGELOG_ENTRY.md
          echo "" >> NEW_CHANGELOG_ENTRY.md
          echo "### chore:" >> NEW_CHANGELOG_ENTRY.md
          echo "" >> NEW_CHANGELOG_ENTRY.md
          
      - name: Merge with existing CHANGELOG.md
        run: |
          if [ -f CHANGELOG.md ]; then
            cp CHANGELOG.md OLD_CHANGELOG_CONTENT.md
          else
            touch OLD_CHANGELOG_CONTENT.md
          fi
          cat NEW_CHANGELOG_ENTRY.md OLD_CHANGELOG_CONTENT.md > CHANGELOG.md
          
      - name: Commit and push updated CHANGELOG
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update CHANGELOG for PR #$NUMBER"
            git push origin HEAD:${{ github.head_ref }}
          fi
