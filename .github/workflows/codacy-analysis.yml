name: Codacy Analysis
on:
  workflow_call:
jobs:
  codacy-analysis:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Tam geçmişi getir
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Clean workspace completely
        run: |
          echo "Current workspace: $GITHUB_WORKSPACE"
          echo "Stopping any git processes..."
          pkill -f git || true
          echo "Removing all files..."
          cd /Users/birol/actions-runner/_work/WfmUser-iOS/
          rm -rf WfmUser-iOS || true
          mkdir -p WfmUser-iOS
          echo "Workspace cleaned"
      
      - name: Manual git clone with token
        run: |
          echo "Attempting git clone with authentication..."
          cd /Users/birol/actions-runner/_work/WfmUser-iOS/
          rm -rf WfmUser-iOS || true
          
          # Token ile repository URL'ini oluştur
          REPO_URL="https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          echo "Cloning repository..."
          
          # Clone işlemi
          git clone "$REPO_URL" WfmUser-iOS
          cd WfmUser-iOS
          
          # Checkout specific ref if needed
          if [ "${{ github.ref }}" != "refs/heads/main" ]; then
            git checkout ${{ github.sha }}
          fi
          
          echo "Clone completed successfully"
      
      - name: Verify checkout
        run: |
          echo "Working directory: $(pwd)"
          echo "Git status:"
          git status
          echo "Git remote:"
          git remote -v
          echo "Recent commits:"
          git log --oneline -n 3
        
      - name: Verify wget installation
        run: |
          which wget
          wget --version
      
      # Codacy analiz
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@v4
        with:
          project-token: '101c14959850483ead736dda762d36cf'
          verbose: true
          max-allowed-issues: 1500
          upload: true

      - name: Check Codacy Quality Gate
        env:
          CODACY_API_TOKEN: 'peNJEy3SRP5Q1ZvGJiLU'
          PROJECT_UUID: 'WfmUser-iOS'
        run: |
          response=$(curl -s -H "api-token: $CODACY_API_TOKEN" \
            "https://api.codacy.com/api/v3/analysis/${PROJECT_UUID}/lastAnalysis")
          STATUS=$(echo "$response" | jq -r '.qualityGateStatus')
          echo "Quality Gate status: $STATUS"
          if [ "$STATUS" != "passed" ]; then
            echo "Quality Gate failed, stopping the build."
            exit 1
          fi
