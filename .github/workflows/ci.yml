name: Build WfmUser App
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Selecting Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode_16.3.app
          
      - name: Copy HERE SDK from local machine
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p heresdk/frameworks
          cp -R /Users/birol/Desktop/heresdk/frameworks/heresdk.xcframework heresdk/frameworks/
     
      - name: Check if heresdk.xcframework exists
        run: ls -l heresdk/frameworks/heresdk.xcframework
        
      - name: Running Xcode version Is?
        run: /usr/bin/xcodebuild -version

      - name: Build Cleanup
        run: |
          xcodebuild clean -project WfmUser.xcodeproj -scheme WfmUser | xcpretty

            
      - name: Build Test
        run: |
          xcodebuild test -project WfmUser.xcodeproj -scheme WfmUser -destination 'platform=iOS   Simulator,name=iPhone 16,OS=18.2' | xcpretty -s

      - name: Remove existing keychain if exists
        run: |
         KEYCHAIN=ios-build.keychain
         KEYCHAIN_PATH=~/Library/Keychains/$KEYCHAIN-db
         if [ -f "$KEYCHAIN_PATH" ]; then
         security delete-keychain "$KEYCHAIN"
         fi
    
      - name: Build Archive
        uses: yukiarrr/ios-build-action@v1.5.0  
        with:
          project-path: WfmUser.xcodeproj
          scheme: WfmUser
          configuration: Release
          export-method: app-store
          p12-base64: ${{ secrets.P12_KEY_BASE64 }}
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          team-id: ${{ secrets.TEAM_ID }}
          certificate-password: ${{ secrets.P12_PASSWORD }}

      - name: Install Fastlane
        run: sudo gem install fastlane

      - name: Find IPA file and export path
        id: find_ipa
        run: |
          IPA_PATH=$(find . -name "*.ipa" | head -n 1)
          if [ -z "$IPA_PATH" ]; then
            echo "IPA not found!"
            exit 1
          fi
          echo "IPA_PATH=$IPA_PATH" >> $GITHUB_ENV
          echo "ipa_path=$IPA_PATH" >> $GITHUB_OUTPUT
          ls -l "$IPA_PATH"

      - name: Decode App Store Connect API Key
        run: |
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}" | base64 --decode > AuthKey.p8

      - name: Upload to TestFlight via Fastlane
        env:
          APP_STORE_CONNECT_API_KEY_PATH: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        run: |
          fastlane upload \
          --api_key_path:AuthKey.p8 \
          --api_key_id:$APP_STORE_CONNECT_API_KEY_ID \
          --api_key_issuer_id:$APP_STORE_CONNECT_API_ISSUER_ID

     # - name: Saving IPA File
     #   uses: actions/upload-artifact@v4 
     #   with:
     #     name: ipa
     #     path: ./**.ipa

     # - name: Show IPA file name (Step 1)
     #   run: |
     #     echo "Searching for IPA file..."
     #     ls -lR . | grep .ipa

     # - name: Set IPA file path (Step 2)
     #   id: find_ipa
     #   run: |
     #     IPA_PATH=$(find . -name "*.ipa" | head -n 1)
     #     if [ -z "$IPA_PATH" ]; then
     #       echo "IPA file not found!"
     #       exit 1
     #     fi
     #     echo "IPA_PATH=$IPA_PATH" >> $GITHUB_ENV

     # - name: Use IPA path with -f
     #   run: |
     #     echo "Using IPA file at: $IPA_PATH"


     # - name: Upload App
     #   if: success()
     #   env:
     #     APPLEID_USERNAME: ${{ secrets.APPLEID_USERNAME }}
     #     APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
     #   run: |
     #     xcrun altool --upload-app -t ios -f ./**.ipa -u "$APPLEID_USERNAME" -p "$APPLEID_PASSWORD" --verbose
