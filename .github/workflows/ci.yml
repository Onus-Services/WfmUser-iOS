name: Build WfmUser App
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Tam geçmişi getir

      - name: Install xcpretty
        run: |
          sudo gem install xcpretty

      - name: Enable IDEFileSystemSynchronizedGroups
        run: |
          export IDEFileSystemSynchronizedGroupsAreEnabled=YES
        
      - name: Set up Xcode 16.3
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.3'
          
      - name: Copy HERE SDK from local machine
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p heresdk/frameworks
          cp -R /Users/birol/Desktop/heresdk/frameworks/heresdk.xcframework heresdk/frameworks/
     
      - name: Check if heresdk.xcframework exists
        run: ls -l heresdk/frameworks/heresdk.xcframework
        
      - name: Install dependencies
        run: echo "No Podfile found, skipping pod install"

     # - name: Build project (disable code signing)
     #   run: |
     #      xcodebuild clean build \
     #      -scheme WfmUser \
     #      -configuration Release \
     #      -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
     #      CODE_SIGN_IDENTITY="" \
     #      CODE_SIGNING_ALLOWED=NO \
     #      CODE_SIGNING_REQUIRED=NO | xcpretty
        
     

     # - name: Run Unit Tests
     #   run: |
     #     xcodebuild test \
     #       -project WfmUser.xcodeproj \
     #       -scheme WfmUser \
     #       -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
     #       -derivedDataPath build \
     #       | tee xcodebuild_test.log | xcpretty

     # - name: Create ExportOptions.plist
     #   run: |
     #     cat <<EOF > ExportOptions.plist
     #     <?xml version="1.0" encoding="UTF-8"?>
     #     <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
     #     <plist version="1.0">
     #     <dict>
     #       <key>method</key>
     #       <string>app-store</string>
     #       <key>uploadBitcode</key>
     #       <false/>
     #       <key>uploadSymbols</key>
     #       <true/>
     #     </dict>
     #     </plist>
     #     EOF

            
      - name: Build Cleanup
        run: |
          xcodebuild clean -project WfmUser.xcodeproj -scheme WfmUser | xcpretty
          
     # - name: Build Test
     #   run: |
     #     xcodebuild test -project WfmUser.xcodeproj -scheme WfmUser -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' | xcpretty -s
          
     # - name: Build Archive
     #   uses: yukiarrr/ios-build-action@v1.5.0  
     #   with:
     #     project-path: WfmUser.xcodeproj
     #     scheme: WfmUser
     #     configuration: Release
     #     export-method: app-store
     #     p12-base64: ${{ secrets.P12_KEY_BASE64 }}
     #     mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
     #     code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
     #     team-id: ${{ secrets.TEAM_ID }}

      - name: Build Archive with Fastlane
        run: fastlane ios build_archive

      - name: Export IPA with Fastlane
        run: fastlane ios export_ipa

      - name: Saving IPA File
        uses: actions/upload-artifact@v4 
        with:
          name: ipa
          path: ./**.ipa
          
      - name: Upload App
        if: success()
        env:
          APPLEID_USERNAME: ${{ secrets.APPLEID_USERNAME }}
          APPLEID_PASSWORD: ${{ secrets.APPLEID_PASSWORD }}
        run: |
          xcrun altool --upload-app -t ios -f ./**.ipa -u "$APPLEID_USERNAME" -p "$APPLEID_PASSWORD" --verbose
