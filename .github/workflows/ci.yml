name: Build WfmUser App
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Tam geçmişi getir

      - name: Install xcpretty
        run: |
          sudo gem install xcpretty

      - name: Install Jazzy for documentation
        run: |
          # Önce mevcut gem'leri temizle ve native extension'ları yeniden derle
          sudo gem uninstall ffi sassc --force || true
          sudo gem cleanup
          # Jazzy ve bağımlılıklarını yeniden yükle
          sudo gem install ffi --force
          sudo gem install sassc --force  
          sudo gem install jazzy --force

      - name: Enable IDEFileSystemSynchronizedGroups
        run: |
          export IDEFileSystemSynchronizedGroupsAreEnabled=YES
        
      - name: Set up Xcode 16.3
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.3'
          
      - name: Setup HERE SDK directory structure
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p ThirdParty/HERESDK/heresdk/frameworks

      - name: Copy HERE SDK from local machine
        run: |
          cd $GITHUB_WORKSPACE
          cp -R /Users/birol/Desktop/heresdk/frameworks/heresdk.xcframework ThirdParty/HERESDK/heresdk/frameworks/

      - name: Check if HERE SDK exists in correct location
        run: |
          ls -la ThirdParty/HERESDK/heresdk/frameworks/
          ls -la ThirdParty/HERESDK/heresdk/frameworks/heresdk.xcframework
        
      - name: Install dependencies
        run: echo "No Podfile found, skipping pod install"

     # - name: Build project (disable code signing)
     #   run: |
     #      xcodebuild clean build \
     #      -scheme WfmUser \
     #      -configuration Release \
     #      -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
     #      CODE_SIGN_IDENTITY="" \
     #      CODE_SIGNING_ALLOWED=NO \
     #      CODE_SIGNING_REQUIRED=NO | xcpretty

      - name: Generate Documentation with Jazzy
        run: |
          # Ruby environment'ını temizle ve Jazzy'yi çalıştır
          export GEM_HOME=""
          export GEM_PATH=""
          jazzy \
            --clean \
            --min-acl internal \
            --module "WfmUser" \
            --build-tool-arguments -project,WfmUser.xcodeproj,-scheme,WfmUser,-sdk,iphonesimulator \
            --output docs || {
              echo "Jazzy failed, trying with rbenv/rvm Ruby..."
              # Alternatif olarak sistem Ruby'si yerine homebrew Ruby kullan
              /usr/bin/ruby -S gem install jazzy --user-install
              ~/.gem/ruby/*/bin/jazzy \
                --clean \
                --min-acl internal \
                --module "WfmUser" \
                --build-tool-arguments -project,WfmUser.xcodeproj,-scheme,WfmUser,-sdk,iphonesimulator \
                --output docs
            }
            
      - name: Deploy Documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          destination_dir: docs
        
     # - name: Run Unit Tests
     #   run: |
     #     xcodebuild test \
     #       -project WfmUser.xcodeproj \
     #       -scheme WfmUser \
     #       -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.4' \
     #       -derivedDataPath build \
     #       | tee xcodebuild_test.log | xcpretty

     # - name: Create ExportOptions.plist
     #   run: |
     #     cat <<EOF > ExportOptions.plist
     #     <?xml version="1.0" encoding="UTF-8"?>
     #     <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
     #     <plist version="1.0">
     #     <dict>
     #       <key>method</key>
     #       <string>app-store</string>
     #       <key>uploadBitcode</key>
     #       <false/>
     #       <key>uploadSymbols</key>
     #       <true/>
     #     </dict>
     #     </plist>
     #     EOF

            
     # - name: Archive app
     #   run: |
     #      xcodebuild archive \
     #      -project WfmUser.xcodeproj \
     #      -scheme WfmUser \
     #      -configuration Release \
     #      -sdk iphoneos18.4 \
     #      -destination 'generic/platform=iOS' \
     #      -archivePath ./build/WfmUser.xcarchive \
     #      CODE_SIGN_IDENTITY="" \
     #      CODE_SIGNING_ALLOWED=NO \
     #      CODE_SIGNING_REQUIRED=NO | tee xcodebuild_archive.log | xcpretty

     # - name: Export IPA
     #   run: |
     #     xcodebuild -exportArchive \
     #     -archivePath ./build/WfmUser.xcarchive \
     #     -exportOptionsPlist ExportOptions.plist \
     #     -exportPath ./build/export

     # - name: Upload to TestFlight
     #   env:
     #     APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
     #     APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
     #     APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
     #   run: |
     #     xcrun altool --upload-app \
     #       -f build/export/WfmUser.ipa \
     #       --type ios \
     #       --apiKey "$APP_STORE_CONNECT_API_KEY_ID" \
     #       --apiIssuer "$APP_STORE_CONNECT_ISSUER_ID"
